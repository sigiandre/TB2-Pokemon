{"remainingRequest":"C:\\Users\\andre\\Desktop\\pokemon\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\andre\\Desktop\\pokemon\\src\\Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\andre\\Desktop\\pokemon\\src\\Home.vue","mtime":1621376704000},{"path":"C:\\Users\\andre\\Desktop\\pokemon\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Desktop\\pokemon\\node_modules\\babel-loader\\lib\\index.js","mtime":315550800000},{"path":"C:\\Users\\andre\\Desktop\\pokemon\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Desktop\\pokemon\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBHZW5lcmF0b3IgZnJvbSAiLi9sZWFybi9tb2RlbCIKaW1wb3J0IERBVEFTRVQgZnJvbSAiLi9sZWFybi9kYXRhc2V0IgoKZXhwb3J0IGRlZmF1bHQgewogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBkYXRhc2V0OiBEQVRBU0VULmpvaW4oIlxuIiksCiAgICAgIGxvZ3M6ICIiLAogICAgICBpbnB1dDogIiIsCiAgICAgIHByZWRpY3Rpb25zOiBbXSwKICAgICAgdHJhaW5pbmdNb2RlbDogZmFsc2UsCiAgICAgIHByZWRpY3Rpbmc6IGZhbHNlLAogICAgICBnZW5lcmF0b3I6IG51bGwsCiAgICAgIHByZWRpY3RlZDogZmFsc2UsCiAgICAgIGRhdGFzZXRPcGVuOiBmYWxzZSwKICAgICAgbG9nc09wZW46IGZhbHNlCiAgICB9CiAgfSwKICBhc3luYyBtb3VudGVkKCkgewogICAgdGhpcy5wcmVkaWN0aW5nID0gdHJ1ZTsKICAgIHRoaXMuZ2VuZXJhdG9yID0gbmV3IEdlbmVyYXRvcigpCiAgICBhd2FpdCB0aGlzLmdlbmVyYXRvci5sb2FkTW9kZWwoKQogICAgdGhpcy5tb2RlbFByZWRpY3QoKQogIH0sCiAgbWV0aG9kczogewogICAgY3JlYXRlTW9kZWxBbmRUcmFpbigpIHsKICAgICAgdGhpcy5kYXRhc2V0T3BlbiA9IGZhbHNlCiAgICAgIHRoaXMubG9nc09wZW4gPSB0cnVlCiAgICAgIHRoaXMudHJhaW5pbmdNb2RlbCA9IHRydWU7CiAgICAgIHRoaXMuZ2VuZXJhdG9yLmNyZWF0ZU1vZGVsQW5kVHJhaW4odGhpcy5kYXRhc2V0LCB0aGlzLmxvZykudGhlbigoKSA9PiB7CiAgICAgICAgdGhpcy50cmFpbmluZ01vZGVsID0gZmFsc2UKICAgICAgfSkKICAgIH0sCiAgICBsb2cobmV3TG9nKSB7CiAgICAgIHRoaXMubG9ncyA9IHRoaXMubG9ncyArIG5ld0xvZyArICJcbiIKICAgIH0sCiAgICB0b2dnbGVEYXRhc2V0KCkgewogICAgICB0aGlzLmxvZ3NPcGVuID0gZmFsc2UKICAgICAgdGhpcy5kYXRhc2V0T3BlbiA9ICF0aGlzLmRhdGFzZXRPcGVuCiAgICB9LAogICAgdG9nZ2xlTG9ncygpIHsKICAgICAgdGhpcy5kYXRhc2V0T3BlbiA9IGZhbHNlCiAgICAgIHRoaXMubG9nc09wZW4gPSAhdGhpcy5sb2dzT3BlbgogICAgfSwKICAgIG1vZGVsUHJlZGljdCgpIHsKICAgICAgbGV0IG5ld1ByZWRpY3Rpb25zID0gW10KICAgICAgbmV3UHJlZGljdGlvbnMucHVzaCh0aGlzLmdlbmVyYXRvci5wcmVkaWN0KHRoaXMuaW5wdXQpKQogICAgICBuZXdQcmVkaWN0aW9ucy5wdXNoKHRoaXMuZ2VuZXJhdG9yLnByZWRpY3QodGhpcy5pbnB1dCkpCiAgICAgIG5ld1ByZWRpY3Rpb25zLnB1c2godGhpcy5nZW5lcmF0b3IucHJlZGljdCh0aGlzLmlucHV0KSkKICAgICAgbmV3UHJlZGljdGlvbnMucHVzaCh0aGlzLmdlbmVyYXRvci5wcmVkaWN0KHRoaXMuaW5wdXQpKQogICAgICBuZXdQcmVkaWN0aW9ucy5wdXNoKHRoaXMuZ2VuZXJhdG9yLnByZWRpY3QodGhpcy5pbnB1dCkpCiAgICAgIHRoaXMucHJlZGljdGlvbnMgPSBuZXdQcmVkaWN0aW9ucwogICAgICB0aGlzLnByZWRpY3RpbmcgPSBmYWxzZQogICAgfQogIH0KfQo="},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0FA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div class=\"hello\">\n    <div class=\"container\">\n      <div class=\"row d-flex justify-content-center\">\n        <div class=\"col-12\">\n          <h1 style=\"text-align:center\">Generador de nombres de Pok√©mon</h1>\n        </div>\n      </div>\n      <div class=\"row mt-4 d-flex justify-content-center\">\n        <div class=\"col-8 d-flex justify-content-between\">\n          <b-button @click=\"toggleDataset()\">\n            Conjunto de datos (Dataset)\n          </b-button>\n          <b-button variant=\"info\" @click=\"createModelAndTrain()\">\n            Modelo de tren de nuevo\n            <b-icon\n              icon=\"arrow-clockwise\" animation=\"spin\" v-if=\"trainingModel\" \n              style=\"background: transparent\"/>\n          </b-button>\n          <b-button @click=\"toggleLogs()\">\n            Registros\n          </b-button>\n        </div>\n      </div>\n\n      <div class=\"row d-flex justify-content-center\">\n        <div class=\"col-8\">\n          <b-collapse id=\"collapse-1\" style=\"margin-top: 30px\" v-model=\"datasetOpen\">\n            <b-card no-body>\n              <b-form-textarea\n                v-model=\"dataset\"\n                id=\"textarea-small\"\n                size=\"sm\"\n                placeholder=\"All names\"\n                class=\"m-0\"\n                disabled\n              ></b-form-textarea>\n            </b-card>\n          </b-collapse>\n        </div>\n      </div>\n\n      <div class=\"row d-flex justify-content-center\">\n        <div class=\"col-8\">\n          <b-collapse id=\"collapse-2\" style=\"margin-top: 30px\" v-model=\"logsOpen\">\n            <b-card no-body>\n              <b-form-textarea\n                v-model=\"logs\"\n                id=\"textarea-small\"\n                size=\"sm\"\n                placeholder=\"You currently have a version of the model trained.\"\n                class=\"m-0\"\n                disabled\n              ></b-form-textarea>\n            </b-card>\n          </b-collapse>\n        </div>\n      </div>\n\n      <div class=\"row d-flex justify-content-center\" style=\"margin-top:40px\">\n        <div class=\"col-8\">\n          <div style=\"display:flex\">\n            <input \n              style=\"flex-grow: 1\" type=\"text\" placeholder=\"Primeras letras (o dejar en blanco)\" \n              maxlength=\"6\" onkeypress=\"return /[a-z]/i.test(event.key)\" v-model=\"input\"\n              :disabled=\"trainingModel\">\n            <b-button \n              style=\"margin-left: 10px; flex-grow: 0\" :disabled=\"trainingModel\"\n              @click=\"predicting = true; modelPredict()\">\n              Generar\n              <b-icon\n                icon=\"arrow-clockwise\" animation=\"spin\" v-if=\"predicting\"\n                style=\"background: transparent\"/>\n            </b-button>\n          </div>\n          <div style=\"margin-left: 2px\">\n            <p \n              v-for=\"(prediction, index) in predictions\" :key=\"index\" \n              style=\"margin-top: 5px; margin-bottom: 0px\">\n              {{ prediction }}\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport Generator from \"./learn/model\"\nimport DATASET from \"./learn/dataset\"\n\nexport default {\n  data() {\n    return {\n      dataset: DATASET.join(\"\\n\"),\n      logs: \"\",\n      input: \"\",\n      predictions: [],\n      trainingModel: false,\n      predicting: false,\n      generator: null,\n      predicted: false,\n      datasetOpen: false,\n      logsOpen: false\n    }\n  },\n  async mounted() {\n    this.predicting = true;\n    this.generator = new Generator()\n    await this.generator.loadModel()\n    this.modelPredict()\n  },\n  methods: {\n    createModelAndTrain() {\n      this.datasetOpen = false\n      this.logsOpen = true\n      this.trainingModel = true;\n      this.generator.createModelAndTrain(this.dataset, this.log).then(() => {\n        this.trainingModel = false\n      })\n    },\n    log(newLog) {\n      this.logs = this.logs + newLog + \"\\n\"\n    },\n    toggleDataset() {\n      this.logsOpen = false\n      this.datasetOpen = !this.datasetOpen\n    },\n    toggleLogs() {\n      this.datasetOpen = false\n      this.logsOpen = !this.logsOpen\n    },\n    modelPredict() {\n      let newPredictions = []\n      newPredictions.push(this.generator.predict(this.input))\n      newPredictions.push(this.generator.predict(this.input))\n      newPredictions.push(this.generator.predict(this.input))\n      newPredictions.push(this.generator.predict(this.input))\n      newPredictions.push(this.generator.predict(this.input))\n      this.predictions = newPredictions\n      this.predicting = false\n    }\n  }\n}\n</script>\n\n<style>\n#textarea-small {\n  height: 150px;\n  margin-bottom: 20px;\n}\n\n.hello {\n  margin-top: 70px;\n}\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n\ninput {\n  color: #6AFB92;\n  width: 500px;\n  border: 0;\n  outline: 0;\n  background: transparent;\n  border-bottom: 2px solid #6AFB92;\n}\n</style>"]}]}